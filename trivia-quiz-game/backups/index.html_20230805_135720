<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1">
<meta name="description" content="">
<meta name="author" content="">

<link rel="apple-touch-icon" sizes="180x180" href="apple-touch-icon.png">
<link rel="icon" type="image/png" sizes="32x32" href="/assets/favicon-32x32.png">
<link rel="icon" type="image/png" sizes="16x16" href="/assets/favicon-16x16.png">
<link rel="manifest" href="site.webmanifest">

<title>Trivia quiz GAME</title>

<link rel="stylesheet" type="text/css" href="css/quiz.css">

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>


<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/js-cookie@3/dist/js.cookie.min.js"></script>


<!-- Fonts -->
<!-- <link href="http://fonts.googleapis.com/css?family=Open+Sans:300italic,400italic,600italic,700italic,800italic,400,300,600,700,800" rel="stylesheet" type="text/css"> -->
<!-- <link href="http://fonts.googleapis.com/css?family=Josefin+Slab:100,300,400,600,700,100italic,300italic,400italic,600italic,700italic" rel="stylesheet" type="text/css"> -->
<script src="https://kit.fontawesome.com/4ea4708350.js" crossorigin="anonymous"></script>

<script src="js/myfunctions.js"> </script>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/katex@0.15.3/dist/katex.min.css" integrity="sha384-KiWOvVjnN8qwAZbuQyWDIbfCLFhLXNETzBQjA/92pIowpC0d2O3nppDGQVgwd2nB" crossorigin="anonymous">

<!-- The loading of KaTeX is deferred to speed up page rendering -->
<script defer src="https://cdn.jsdelivr.net/npm/katex@0.15.3/dist/katex.min.js" integrity="sha384-0fdwu/T/EQMsQlrHCCHoH10pkPLlKA1jL5dFyUOvB3lfeT2540/2g6YgSi2BL14p" crossorigin="anonymous"></script>

<!-- To automatically render math in text elements, include the auto-render extension: -->
<script defer src="https://cdn.jsdelivr.net/npm/katex@0.15.3/dist/contrib/auto-render.min.js" integrity="sha384-+XBljXPPiv+OzfbB3cVmLHf4hdUFHlWNZN5spNQ7rmHTXpd7WvJum6fIACpNNfIR" crossorigin="anonymous"></script>

</head>

<body>
    <script type="text/javascript">

        var allQuestionContent = [];
        //      var allQuestionContentCopy=[];
        var itemList = [];

        let katex_opts = {
            // customised options
            // â€¢ auto-render specific keys, e.g.:
            delimiters: [
                { left: '$$', right: '$$', display: true },
                { left: '$', right: '$', display: false },
                { left: '\\(', right: '\\)', display: false },
                { left: '\\[', right: '\\]', display: true }
            ]
        };

        function getAllSiblingInputs(elem, filter) {
            var sibs = [];
            //    console.log("ele node name:",elem.nodeName);
            elem = elem.parentNode.parentNode.firstChild;
            do {
                if (elem.nodeType === 3) continue; // text node
                if (!filter || filter(elem)) sibs.push(elem.firstChild);
                //	console.log("name:",elem.firstChild.value);
            } while (elem = elem.nextSibling)
            return sibs;
        }
        function item(number1, question1, answer1) {
            this.number = number1;
            this.question = question1;
            this.answer = answer1;
            //	  this.showcontent=content1;
            //	  this.showing=showing1;
        }


        function shuffle(array) {
            var currentIndex = array.length, temporaryValue, randomIndex;

            while (0 !== currentIndex) {

                randomIndex = Math.floor(Math.random() * currentIndex);
                currentIndex -= 1;
                // And swap it with the current element.
                temporaryValue = array[currentIndex];
                array[currentIndex] = array[randomIndex];
                array[randomIndex] = temporaryValue;
            }
            return array;
        }

        function askphp(queryString, columnSets, callback) {
            $.ajax({    //create an ajax request to load_page.php
                global: false,
                data: { queryString: queryString, columnSets: columnSets },
                type: "POST",
                url: "/asknode",
                dataType: "json",   //expect html to be returned
                success: callback,
                error: function (xhr, status, error) {
                    var errorMessage = xhr.status + ': ' + xhr.statusText;
                    console.log(" error comming .....");
                    alert('Error - ' + errorMessage + ' status:' + status + ' error:' + error);
                }
            });   // ajax
        }

        function clickitem(i, event) {
            //var questionHTML="<button class='eachQuestion' type='button' onclick='clickitem( " +i+")'>" + itemList[i].question +"</button>";
            //var answerHTML="<div class='eachAnswer'>" + itemList[i].answer +"</div>";

            //	  console.log("clicked it",i, event.target.nextElementSibling, event.target.nextElementSibling.nextElementSibling);
            let answer = event.target.nextElementSibling.nextElementSibling;
            if (answer) {
                answer.remove();
            } else {
                answer = document.createElement("div");
                answer.innerHTML = itemList[i].answer;
                answer.setAttribute("class", "eachAnswer");
                event.target.parentNode.append(answer);
                renderMathInElement(answer, katex_opts);
            }
            // if(itemList[i].showing) {
            //     itemList[i].showing=false;
            //     itemList[i].showcontent=questionHTML;
            //     allQuestionContent[i]=questionHTML;
            // }
            // else {
            //     itemList[i].showing=true;
            //     itemList[i].showcontent=questionHTML + answerHTML;
            //     allQuestionContent[i]=questionHTML+answerHTML;
            // }

            // $("#allQuestionsHere").html(allQuestionContent);


        }

        function editItem(i) {
            var isEnglish = false;
            $.ajax({    //create an ajax request to load_page.php
                async: false,
                global: false,
                data: { number: itemList[i].number },
                type: "POST",
                url: "getCategory.php",
                dataType: "json",   //expect html to be returned
                success: function (response) {
                    isEnglish = parseInt(response[0]) == 900;
                    //		      console.log("isEnglish:"+isEnglish);
                },
                error: function (xhr, status, error) {
                    var errorMessage = xhr.status + ': ' + xhr.statusText;
                    console.log(" error comming .....");
                    alert('Error - ' + errorMessage + ' status:' + status + ' error:' + error);
                }
            });   // ajax
            window.open(
                'editAddQuestion.html?number=' + itemList[i].number + '&mode=edit&isEnglish=' + isEnglish,
                '_blank' // <- This is what makes it open in a new window.
            );

        }





        ///////////// state: category_unselected => selected_started =--> game_ended
        $(document).ready(function () {
            var total;
            var i = -1;
            var currentSet=[];
            var numberlist;
            //	  var categoryCondition=" ";
            var chooseAll = false;
            var listshowing = false;
            var allQuestionShowedBefore = false;
            var selectedCategoryIds;
            var categorylist = {};
            var numberNow;

            navbar_init();

            //("#expand-collapse").hide();
            var allCollapsed = true;

            console.log(`state now ==> ${localStorage.getItem('state')}`);
            var state = localStorage.getItem('state')
            if (state == "selected_started") {
                $("#navbar_left2").show();
                $("#navbar_right2").show();

                if (localStorage.getItem("numberlist")) numberlist = JSON.parse(localStorage.getItem("numberlist"));
                if (localStorage.getItem("selectedCategoryIds")) selectedCategoryIds = JSON.parse(localStorage.getItem("selectedCategoryIds"));

                i = parseInt(localStorage.getItem("iQuestion")); ///convert string to int 
                total = localStorage.getItem("total");
                showQuestion(i);
                $("#showlater").show();
                if (localStorage.getItem("chooseAll") == "true")
                    chooseAll = true;
                

            } else {
                //$("#showlater").hide();
                //$("#select-and-click").hide();
                $("#start1").show();
                $("#navbar_left1").show();
                $("#navbar_right1").show();

            }

            $("#start1").click(function () {
                $("#start1").hide();
                getCategoriesFromDB_andShow();

            });
            function getCategoriesFromDB_andShow() {
                categorylist = [];
                $.ajax({    //create an ajax request to load_page.php
                    global: false,
                    type: "POST",
                    url: "/getAllCategories", //"getAllCategories.php",
                    dataType: "json",   //expect html to be returned
                    success: function (response) {
                        // console.log("response:",response);
                        let htmls = "<ul>";
                        var obj = {};
                        for (const key in response) {
                            // categorylist[response[key].Id] = response[key].name;
                            categorylist.push({categoryId: response[key].Id, name:response[key].name})
                            htmls += "<li>";
                            htmls += `<input type='checkbox' id='${response[key].name}' value='${response[key].Id}' class='option' />`;
                            htmls += `<label for="${response[key].name}"> ${response[key].name} </label>`
                            if (response[key].subcats.length > 0) {
                                htmls += "<ul>";
                                htmls += "<li>";
                                htmls += `<input type='checkbox' id='${response[key].name}_0' value='${response[key].Id}' class='subOption'/>`;
                                htmls += `<label for="${response[key].name}_0"> ${response[key].name} </label>`
                                htmls += "</li>";
                                for (let i = 0; i < response[key].subcats.length; i++) {
                                    htmls += "<li>";
                                    htmls += `<input type='checkbox' id='${response[key].subnames[i]}' value='${response[key].subids[i]}' class='subOption'/>`;
                                    htmls += `<label for="${response[key].subnames[i]}"> ${response[key].subnames[i]} </label>`
                                    htmls += "</li>";
                                    // categorylist[response[key].subids[i]] = "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;" + response[key].subnames[i];
                                    categorylist.push({categoryId: response[key].subids[i], name:"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;" + response[key].subnames[i]});

                                }

                                htmls += "</ul>";
                            }
                            htmls += "</li>";
                        }
                        htmls += "</ul>";
                        $("#select-categories").html(htmls);
                        $("#select-and-click").show();
                        localStorage.setItem("categorylist", JSON.stringify(categorylist));
                        console.log(` localstorage set categorylist: ${JSON.stringify(categorylist)}`);
                        let checkboxes = document.querySelectorAll('input.subOption');
                        for (let i = 0; i < checkboxes.length; i++) {
                            let name =
                                checkboxes[i].onclick = function (evt) {

                                    // console.log(" nodename:",evt.target);
                                    const sibs = getAllSiblingInputs(evt.target);
                                    const topCatInput = evt.target.parentNode.parentNode.parentNode.firstChild;
                                    // console.log("topCatInput:",topCatInput.nodeName);
                                    let checkedCount = 0;
                                    for (let j = 0; j < sibs.length; j++) {
                                        if (sibs[j].checked) checkedCount += 1;
                                    }
                                    // console.log("checked :",checkedCount);
                                    topCatInput.checked = checkedCount > 0;
                                    topCatInput.indeterminate = checkedCount > 0 && checkedCount < sibs.length;

                                }
                        }
                        let topboxes = document.querySelectorAll('input.option');
                        for (let j = 0; j < topboxes.length; j++) {
                            topboxes[j].onclick = function (evt) {
                                //			      console.log("sibling",evt.target.nextSibling);
                                let ele = evt.target.nextSibling.nextSibling;
                                if (ele) {
                                    Array.prototype.forEach.call(ele.children, li_ele => li_ele.firstChild.checked = this.checked);
                                }

                            }
                        }
                    },
                    error: function (xhr, status, error) {
                        var errorMessage = xhr.status + ': ' + xhr.statusText;
                        console.log(" error comming .....");
                        alert('Error - ' + errorMessage + ' status:' + status + ' error:' + error);
                    }
                });   // ajax
            }
            function getQuestionIdList_andStart(queryData){
                queryData.questionIdOnly="yes";
                $.ajax({    //create an ajax request to load_page.php
                    data: queryData,
                    type: "POST",
                    url: "/getQuestions",
                    dataType: "json",   //expect html to be returned
                }).done(res=>{
                    /// isEnglish = parseInt(response[0]) == 900;
                    numberlist = res.result;
                    total = numberlist.length;
                    ///$("#stats").html("Total:" + total);
                    shuffleAndStart();
                });
            }
            $("#startThem").click(function () {
                selectedCategoryIds = [];
                const topCatBoxes = document.querySelectorAll('input.option');
                const subCatBoxes = document.querySelectorAll('input.subOption');
                Array.prototype.forEach.call(topCatBoxes, ele => {
                    if (!ele.indeterminate && ele.checked) selectedCategoryIds.push(ele.value);
                });
                Array.prototype.forEach.call(subCatBoxes, ele => {
                    if (ele.checked) selectedCategoryIds.push(ele.value);
                });

                if (selectedCategoryIds.length < 1) return;
                localStorage.setItem("selectedCategoryIds", JSON.stringify(selectedCategoryIds));
                console.log(`selectedCategoryIds: ${selectedCategoryIds}`);
                localStorage.setItem("chooseAll", false);
                getQuestionIdList_andStart({ selectedCategoryIds });
            }); // startThem click

            $("#startAll").click(function () {
                chooseAll = true;
                localStorage.setItem("chooseAll", true);
                getQuestionIdList_andStart({ allCategories:'yes' });
            }); // startAll click

            function convert2break(str) {
                return str.replace(/\\(.)/g, function (match, char) {
                    return { 't': '\t', 'r': '\r', 'n': '\n', '0': '\0' }[char] || match;
                }).replace(/\n/g, "<br>");

            }
            function showQuestion(iQuestion) {
                $("#answer").html("");
                $("#detail").html("");
                localStorage.setItem("iQuestion", iQuestion);
                localStorage.setItem("number", numberlist[iQuestion]);
                
                numberNow = numberlist[iQuestion];
                console.log(`numberlist: ${numberlist},  ------------ numberNow: ${numberNow}`);
                $.ajax({    //create an ajax request to load_page.php
                    data: { questionId: numberNow },
                    type: "POST",
                    url: "/getOneQuiz",
                    dataType: "json",   //expect html to be returned
                }).done(res=>{
                    question= res.result.question;
                    answer= res.result.answer;
                    detail= res.result.detail;
                    if(answer) answer = convert2break(answer);
                    if(detail) detail = convert2break(detail);
                    question = convert2break(question);
                    currentSet[0] = question;
                    currentSet[1] = answer;
                    currentSet[2] = detail;
                    console.log(`detail---:${detail}`);
                    $("#question").html(currentSet[0]);
                    var j = iQuestion + 1;
                    $("#stats").html(j + '/' + total);

                });

            }

            function shuffleAndStart() {
                $("#select-and-click").hide();
                shuffle(numberlist);
                i = 0;
                $("#showlater").show();
                $("#navbar_left1").hide();                
                $("#navbar_left2").show();
                $("#navbar_right1").hide();                
                $("#navbar_right2").show();
                $("#stats").show();
                showQuestion(i);
                localStorage.setItem("total", total);
                localStorage.setItem("state", "selected_started");
                localStorage.setItem("numberlist", JSON.stringify(numberlist));
            }

            $("#nextQuestion").click(function () {
                if (i == (total - 1)) return;
                i++;
                showQuestion(i);
            });  // click

            $("#preQuestion").click(function () {
                if (i == 0) return;
                i--;
                showQuestion(i);
            });  // click

            $("#showAnswer").click(function () {
                $("#answer").html(currentSet[1]);
                //let x = document.getElementById("answer");
                //console.log(currentSet[1]);
                //x.innerHTML = currentSet[1]; //"$$ p(X)=\\frac{e^{\\beta_{0} +\\beta_{1}X}}{1 + e^{\\beta_{0}+\\beta_{1}X}} $$";
                $("#detail").html("<hr>" + currentSet[2]);

                renderMathInElement(document.getElementById("answer"), katex_opts);
                //var y = document.getElementById("equation");
                //y.innerHTML = " \\( p(X)=\frac{e^{\beta_{0} +\beta_{1}X}}{1 + e^{\beta_{0}+\beta_{1}X}} \\)";
                //y.innerHTML = "  $  \\beta_{0}   $";
                //renderMathInElement(y, opts);
            });


            $("#giveup").click(function () {
                localStorage.setItem("state", "");
                $("#showlater").hide();
                if ($('#select-categories').html() == '') getCategoriesFromDB_andShow();
                else $("#select-and-click").show();
                allQuestionShowedBefore = false;
                $("#allQuestionsHere").html("");
                $("#expand-collapse").hide();
                $("#showAll").html("showAll");
                $("#navbar_right1").show();
                $("#navbar_right2").hide();
                $("#stats").hide();
                $("#navbar_left1").show();                
                $("#navbar_left2").hide();
                listshowing = false;

            });
            $("#showAll").click(function () {
                if (listshowing) {
                    listshowing = false;
                    //$("#allQuestionsHere").html("");
                    $("#expand-collapse").hide();
                    $("#allQuestionsHere").hide();
                    $(this).html("showAll");
                    return;
                }
                else if (allQuestionShowedBefore) {
                    //allQuestionContent=allQuestionContentCopy.slice();   // in javascript, arr1=arr2 will only create a reference to  arr2, how arr1 change will affect arr2
                    $(this).html("hideAll");
                    listshowing = true;
                    //$("#allQuestionsHere").html(allQuestionContent);
                    $("#expand-collapse").show();
                    $("#allQuestionsHere").show();

                    return;
                }
                allQuestionShowedBefore = true;
                allQuestionContent = [];
                itemList = [];
                
                let queryData={ selectedCategoryIds };
                if(chooseAll){
                    queryData={ allCategories:'yes' };
                }
                queryData.questionIdOnly="no";
                $.ajax({    //create an ajax request to load_page.php
                    data: queryData,
                    type: "POST",
                    url: "/getQuestions",
                    dataType: "json",   //expect html to be returned
                }).done(res=>{
                    if (res.state == "succeed") {
                        //result.shift(); // use shift() to remove the first element
                        resu = res.result;
                        console.log(`resu: ${resu}`);
                        var n = resu.length;
                        var number;
                        var i;
                        var oneButtonHTML;
                        var content;
                        for (i = 0; i < n; i++) {
                            // console.log(`${i}, keys:${Object.keys(resu[i])}`);
                            number = resu[i].questionId;
                            question = resu[i].question;
                            answer = resu[i].answer;
                            // console.log(`question: ${question}, number: ${number}`);
                            question = convert2break(question);
                            answer = convert2break(answer);
                            oneButtonHTML = "<div class='eachItem' data-key=" + i + "> <button class='eachQuestion' type='button' onclick='clickitem( " + i + ", event)'>" + question + "</button> <button class='eachEditButton' onclick='editItem( " + i + ")'> Edit </button> </div>";
                            oneitem = new item(number, question, answer);
                            itemList.push(oneitem);
                            allQuestionContent.push(oneButtonHTML);
                        }
                        //allQuestionContentCopy=allQuestionContent.slice();
                        $("#allQuestionsHere").html(allQuestionContent);
                    } else {
                        alert(result);
                    }
                });
                $(this).html("hideAll");
                $("#expand-collapse").show();
                listshowing = true;

            });



            $("#editit").click(function () {
                //console.log("numberlist[i]:"+numberlist[i]);
                var isEnglish = false;
                $.ajax({    //create an ajax request to load_page.php
                    async: false,
                    global: false,
                    data: { number: numberlist[i] },
                    type: "POST",
                    url: "getCategory.php",
                    dataType: "json",   //expect html to be returned
                    success: function (response) {
                        isEnglish = parseInt(response[0]) == 900;
                    },
                    error: function (xhr, status, error) {
                        var errorMessage = xhr.status + ': ' + xhr.statusText;
                        console.log(" error comming .....");
                        alert('Error - ' + errorMessage + ' status:' + status + ' error:' + error);
                    }
                });   // ajax
                window.open(
                    'editAddQuestion.html?number=' + numberNow + '&mode=edit&isEnglish=' + isEnglish,
                    '_blank' // <- This is what makes it open in a new window.
                );
            });

            $("#expand-collapse-button").click(function () {
                if (allCollapsed) {
                    allCollapsed = false;
                    $(this).html("Collapse All");
                    $("#allQuestionsHere .eachItem").each(function () {
                        if ($(this).children().length == 2) {
                            $(this).append("<div class='eachAnswer'>" + itemList[$(this).data("key")].answer + "</div>");
                        }
                    });
                    renderMathInElement(document.getElementById("allQuestionsHere"), katex_opts);

                } else {
                    allCollapsed = true;
                    $("#allQuestionsHere .eachAnswer").remove();
                    $(this).html("Expand All");
                }
            });

        });  // ready

    </script>

    <div class="container-md">
        <!-- before game start: signin, signup/ logout, home, add1, add2
after game start: quit, showall, edit, home
sigin/signup/logout ----- quit, edit
home, add -----------------home, showall -->

<div id="topBar" style="margin-left: -13px; margin-right: -13px; text-align: center; margin-bottom: 20px">
    <span class="float-start">
        <a href="/">
            <button type="button" class="btn btn-primary">HOME</button>
        </a>
        <span id="navbar_left1">
            <a href="/editAddQuestion.html?mode=add">
                <button type="button" class="btn btn-outline-primary">Add1</button>
            </a>
            <!-- <a href="addTwoMoreQuestion.html" target="_blank">
                <button type="button" class="btn btn-outline-primary">Add2+</button>
            </a> -->
        </span>
        <span id="navbar_left2">
            <button type="button" id="showAll" class="btn btn-outline-primary">showAll</button>
        </span>
    </span>

    TRIVIA
    <span id="stats"></span>

    <span class="float-end" id="navbar_right1" style="display:none;">
        <span style="text-align:left;">
            <span id="nav_username"></span>
        </span>
        <a href="signin.html" id="signin_button">
            <button type="button" class="btn btn-outline-primary">SignIn</button>
        </a>
        <a href="signup.html" id="signup_button">
            <button type="button" class="btn btn-outline-primary">SignUp</button>
        </a>
        <button type="button" class="btn btn-outline-primary" id="logout_button" style="display: none;">Logout</button>

        <!-- <a href="signin.html" target="_blank"> -->
    </span>
    <span class="float-end" id="navbar_right2">
        <button type="button" class="btn btn-danger" id="giveup">QUIT</button>
        <button type="button" class="btn btn-outline-primary" id="editit">Edit</button>
    </span>


</div>

            <div class="text-center"> <button type="button" class="btn btn-success btn-lg" id="start1"> Choose Categories! </button> </div>

            <div id="select-and-click" >
                <div id="select-categories"></div>
                <div class="text-center bottomspace">
                    <button type="button" class="btn btn-success btn-lg" id="startThem"> Select Them! </button>
                    <button type="button" class="btn btn-warning btn-lg" id="startAll"> Select All! </button>
                </div>
            </div>

            <div id="showlater">
                <div class="text-center alert alert-info" id="question" style="margin-left: -13px; margin-right: -13px;"> </div>
                <div class="row" id="buttons">
                    <button class="btn btn-success col-sm-4" type="button" id="preQuestion"> <i class="fa-solid fa-angles-left"></i> (Prev) </button>
                    <button class="btn btn-warning col-sm-4" type="button" id="showAnswer"> Show Answer </button>
                    <button class="btn btn-success col-sm-4" type="button" id="nextQuestion"> <i class="fa-solid fa-angles-right"></i> (Next) </button>
                </div>
                <div class="row well" id="bganswer">
                    <p id="answer"> </p>
                </div>
                <div class="row" id="bgdetail">
                    <p id="detail"> </p>
                </div>
            </div>
            <div id="expand-collapse" class="text-center">
                <button type="button" id="expand-collapse-button" class="btn btn-outline-primary">Expand All</button>
            </div>
            <div id="allQuestionsHere" class="row"> </div>
            <div style="height:100px"></div>
    </div>


</body>

</html>
</body>